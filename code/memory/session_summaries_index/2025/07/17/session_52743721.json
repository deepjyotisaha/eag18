{
  "directed": true,
  "multigraph": false,
  "graph": {
    "session_id": "52743721",
    "original_query": "I am a middle school physics teacher preparing to teach the **law of conservation of momentum**, and I need you to autonomously generate a complete, classroom-ready visual presentation. Your task is to create a series of **clear, self-explanatory, and scientifically accurate animations** that demonstrate key momentum concepts, including:1. Elastic collision in 1D (e.g., two balls bouncing off each other)2. Inelastic collision in 1D (e.g., two objects sticking together)3. 2D collision with different masses and angles4. Newton’s Cradle5. Bouncing balls with changing mass6. Carts on a frictionless track with spring bumpersYou must organize these into a **visually appealing, full-screen HTML presentation** (single file or folder), with **linked assets**, embedded animations (canvas-based, SVG, or CSS/JS as needed), and simple labels or captions for each slide. The layout should be modern, fullscreen by default, easy to navigate (e.g., arrows or buttons), and designed with school projectors in mind (light background, large fonts, minimal clutter).Ensure everything works offline — **link all JS/CSS/image files properly**. Animations should run smoothly on average school computers. Avoid external CDN dependencies. Include a title slide and a summary/conclusion slide reinforcing the conservation principle. Make it **interactive where helpful** (e.g., sliders to vary mass or velocity). Use only browser-native technologies: HTML, CSS, JavaScript.Your output should be a clean, and ready to copy to a USB drive and run locally. No placeholders. No missing links. Everything must just work. Build with pride: this is going to be used to inspire 12-year-olds.",
    "file_manifest": [],
    "created_at": "2025-07-17T09:15:21.043029",
    "status": "running",
    "output_chain": {
      "T001": {
        "initial_thoughts": "I need to create a basic HTML structure for a presentation on the law of conservation of momentum. It requires specific placeholders for different animation types and other elements. This is a straightforward file creation task. Since the request is to create a new HTML file, I should use the 'files' output directly and not involve any python code or editing.",
        "output": {},
        "call_self": false,
        "files": {
          "index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Law of Conservation of Momentum</title>\n</head>\n<body>\n  <!--TITLE_SLIDE_PLACEHOLDER-->\n\n  <!--ELASTIC_COLLISION_PLACEHOLDER-->\n\n  <!--INELASTIC_COLLISION_PLACEHOLDER-->\n\n  <!--2D_COLLISION_PLACEHOLDER-->\n\n  <!--NEWTONS_CRADLE_PLACEHOLDER-->\n\n  <!--BOUNCING_BALLS_PLACEHOLDER-->\n\n  <!--CARTS_PLACEHOLDER-->\n\n  <!--NAVIGATION_PLACEHOLDER-->\n\n  <!--SUMMARY_SLIDE_PLACEHOLDER-->\n</body>\n</html>"
        },
        "cost": 0.0005283,
        "input_tokens": 2982.0,
        "output_tokens": 135.0,
        "total_tokens": 3117.0,
        "execution_result": {
          "status": "success",
          "session_id": "52743721",
          "operations": [
            "direct_files"
          ],
          "created_files": [
            "media\\generated\\52743721\\index.html"
          ],
          "file_results": {
            "created_files": [
              "media\\generated\\52743721\\index.html"
            ],
            "file_count": 1,
            "total_size": 430,
            "status": "success",
            "errors": [],
            "execution_time": 0.0021885000005568145
          },
          "code_results": {},
          "total_time": 0.004084499998498359,
          "error": null
        },
        "created_files": [
          "media\\generated\\52743721\\index.html"
        ]
      },
      "T002": {
        "updated_file": "index.html"
      },
      "T003": {
        "updated_file": "index.html"
      },
      "T004": {
        "updated_file": "index.html"
      },
      "T005": {
        "updated_file": "index.html"
      },
      "T006": {
        "updated_file": "index.html"
      },
      "T007": {
        "updated_file": "index.html"
      }
    },
    "validation_results": {
      "is_valid": true,
      "is_dag": true,
      "cycles": [],
      "disconnected_components": [],
      "orphaned_nodes": [],
      "root_nodes": [],
      "leaf_nodes": [
        "T011",
        "T012"
      ],
      "warnings": [],
      "errors": []
    }
  },
  "nodes": [
    {
      "description": "Initial Query",
      "agent": "System",
      "status": "completed",
      "id": "ROOT"
    },
    {
      "id": "T001",
      "description": "Create the basic HTML structure for the presentation with placeholders for animations and navigation. Include title and summary slides.",
      "agent": "CoderAgent",
      "agent_prompt": "Create a basic HTML structure for a presentation on the law of conservation of momentum. Include placeholders for the title slide, elastic collision animation, inelastic collision animation, 2D collision animation, Newton's cradle animation, bouncing balls animation, carts animation, navigation buttons, and a summary slide. The HTML should include placeholders like '<!--TITLE_SLIDE_PLACEHOLDER-->', '<!--ELASTIC_COLLISION_PLACEHOLDER-->', '<!--INELASTIC_COLLISION_PLACEHOLDER-->', '<!--2D_COLLISION_PLACEHOLDER-->', '<!--NEWTONS_CRADLE_PLACEHOLDER-->', '<!--BOUNCING_BALLS_PLACEHOLDER-->','<!--CARTS_PLACEHOLDER-->', '<!--NAVIGATION_PLACEHOLDER-->', and '<!--SUMMARY_SLIDE_PLACEHOLDER-->'. Include basic HTML boilerplate (<!DOCTYPE html>, <html>, <head>, <body>). All content must be in the body tag. The title should be 'Law of Conservation of Momentum'. The file name should be 'index.html'.",
      "reads": [],
      "writes": [
        "T001"
      ],
      "status": "completed",
      "output": {
        "initial_thoughts": "I need to create a basic HTML structure for a presentation on the law of conservation of momentum. It requires specific placeholders for different animation types and other elements. This is a straightforward file creation task. Since the request is to create a new HTML file, I should use the 'files' output directly and not involve any python code or editing.",
        "output": {},
        "call_self": false,
        "files": {
          "index.html": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Law of Conservation of Momentum</title>\n</head>\n<body>\n  <!--TITLE_SLIDE_PLACEHOLDER-->\n\n  <!--ELASTIC_COLLISION_PLACEHOLDER-->\n\n  <!--INELASTIC_COLLISION_PLACEHOLDER-->\n\n  <!--2D_COLLISION_PLACEHOLDER-->\n\n  <!--NEWTONS_CRADLE_PLACEHOLDER-->\n\n  <!--BOUNCING_BALLS_PLACEHOLDER-->\n\n  <!--CARTS_PLACEHOLDER-->\n\n  <!--NAVIGATION_PLACEHOLDER-->\n\n  <!--SUMMARY_SLIDE_PLACEHOLDER-->\n</body>\n</html>"
        },
        "cost": 0.0005283,
        "input_tokens": 2982.0,
        "output_tokens": 135.0,
        "total_tokens": 3117.0,
        "execution_result": {
          "status": "success",
          "session_id": "52743721",
          "operations": [
            "direct_files"
          ],
          "created_files": [
            "media\\generated\\52743721\\index.html"
          ],
          "file_results": {
            "created_files": [
              "media\\generated\\52743721\\index.html"
            ],
            "file_count": 1,
            "total_size": 430,
            "status": "success",
            "errors": [],
            "execution_time": 0.0021885000005568145
          },
          "code_results": {},
          "total_time": 0.004084499998498359,
          "error": null
        },
        "created_files": [
          "media\\generated\\52743721\\index.html"
        ]
      },
      "error": null,
      "cost": 0.0,
      "start_time": "2025-07-17T09:15:21.072601",
      "end_time": "2025-07-17T09:15:24.053424",
      "execution_time": 2.980823,
      "execution_result": {
        "status": "success",
        "session_id": "52743721",
        "operations": [
          "direct_files"
        ],
        "created_files": [
          "media\\generated\\52743721\\index.html"
        ],
        "file_results": {
          "created_files": [
            "media\\generated\\52743721\\index.html"
          ],
          "file_count": 1,
          "total_size": 430,
          "status": "success",
          "errors": [],
          "execution_time": 0.0021885000005568145
        },
        "code_results": {},
        "total_time": 0.004084499998498359,
        "error": null
      },
      "input_tokens": 0,
      "output_tokens": 0
    },
    {
      "id": "T002",
      "description": "Generate CSS for the overall styling and layout of the presentation. Use a light background, large fonts, and minimal clutter. Ensure it's fullscreen and suitable for school projectors. The CSS must be embedded within the HTML file using <style> tags.",
      "agent": "CoderAgent",
      "agent_prompt": "Generate CSS for a presentation on the law of conservation of momentum. Use a light background (e.g., #f0f0f0), large fonts (e.g., 20px), minimal clutter, and a fullscreen layout. Ensure it's suitable for school projectors. Include styles for the body, headings, paragraphs, and navigation buttons. Add basic CSS reset. All CSS rules must be embedded within the <style> tag in the index.html file. Read the content of the index.html file from the output of T001. If <style> tag already exists in that file, then add the CSS rules within the <style> tags. If not, create it inside the <head> tag of index.html. Add CSS styling to the body tag. body {font-family: sans-serif; background-color: #f0f0f0; font-size: 20px;}. Add CSS styling for headings and paragraphs. h1 {font-size: 2em; margin-bottom: 0.5em;}p {margin-bottom: 1em;}. Add CSS styling for the navigation buttons. .nav-button {padding: 0.5em 1em; background-color: #ddd; border: none; cursor: pointer;}. Use the placeholder '<!--CSS_PLACEHOLDER-->' in the <style> tag in the index.html file. All content must be added before the '<!--CSS_PLACEHOLDER-->'.",
      "reads": [
        "T001"
      ],
      "writes": [
        "T002"
      ],
      "status": "completed",
      "output": {
        "updated_file": "index.html"
      },
      "error": null,
      "cost": 0.0,
      "start_time": "2025-07-17T09:15:24.079427",
      "end_time": "2025-07-17T09:15:29.502221",
      "execution_time": 5.422794,
      "input_tokens": 0,
      "output_tokens": 0,
      "execution_result": null
    },
    {
      "id": "T003",
      "description": "Create JavaScript code for an elastic collision animation in 1D. Use canvas or SVG for the animation. Include controls (e.g., sliders) to vary mass and velocity. The animation should be self-explanatory and scientifically accurate. The javascript must be embedded within the HTML file using <script> tags.",
      "agent": "CoderAgent",
      "agent_prompt": "Create JavaScript code for an elastic collision animation in 1D. Use canvas for the animation. Include controls (e.g., sliders) to vary mass (m1, m2) and velocity (v1, v2) of two balls. The animation should demonstrate the conservation of momentum and kinetic energy. Use requestAnimationFrame for smooth animation. The javascript must be embedded within the HTML file using <script> tags. Read the content of the index.html file from the output of T002. If <script> tag already exists in that file, then add the javascript code within the <script> tags. If not, create it at the end of the body tag of index.html. Add JavaScript code to create a canvas element with id 'elasticCollisionCanvas'. The canvas element must have width of 600 and height of 400 pixels. Add Javascript code to create two sliders for each mass (m1, m2) and velocity (v1, v2). The ranges of the slider must be m1 (1 to 10), m2 (1 to 10), v1 (-10 to 10), v2 (-10 to 10). All content must be added before the '<!--ELASTIC_COLLISION_PLACEHOLDER-->' placeholder in the index.html file. Use the placeholder '<!--ELASTIC_COLLISION_JS_PLACEHOLDER-->' in the <script> tag. All javascript code must be added before the '<!--ELASTIC_COLLISION_JS_PLACEHOLDER-->'.",
      "reads": [
        "T002"
      ],
      "writes": [
        "T003"
      ],
      "status": "completed",
      "output": {
        "updated_file": "index.html"
      },
      "error": null,
      "cost": 0.0,
      "start_time": "2025-07-17T09:15:29.529236",
      "end_time": "2025-07-17T09:15:41.354767",
      "execution_time": 11.825531,
      "input_tokens": 0,
      "output_tokens": 0,
      "execution_result": null
    },
    {
      "id": "T004",
      "description": "Create JavaScript code for an inelastic collision animation in 1D (two objects sticking together). Use canvas or SVG for the animation. Include controls to vary mass and velocity. The animation should be self-explanatory and scientifically accurate. The javascript must be embedded within the HTML file using <script> tags.",
      "agent": "CoderAgent",
      "agent_prompt": "Create JavaScript code for an inelastic collision animation in 1D (two objects sticking together). Use canvas for the animation. Include controls to vary mass (m1, m2) and velocity (v1, v2) of two objects. The animation should demonstrate the conservation of momentum. Use requestAnimationFrame for smooth animation. The javascript must be embedded within the HTML file using <script> tags. Read the content of the index.html file from the output of T003. If <script> tag already exists in that file, then add the javascript code within the <script> tags. If not, create it at the end of the body tag of index.html. Add JavaScript code to create a canvas element with id 'inelasticCollisionCanvas'. The canvas element must have width of 600 and height of 400 pixels. Add Javascript code to create two sliders for each mass (m1, m2) and velocity (v1, v2). The ranges of the slider must be m1 (1 to 10), m2 (1 to 10), v1 (-10 to 10), v2 (-10 to 10). All content must be added before the '<!--INELASTIC_COLLISION_PLACEHOLDER-->' placeholder in the index.html file. Use the placeholder '<!--INELASTIC_COLLISION_JS_PLACEHOLDER-->' in the <script> tag. All javascript code must be added before the '<!--INELASTIC_COLLISION_JS_PLACEHOLDER-->'.",
      "reads": [
        "T003"
      ],
      "writes": [
        "T004"
      ],
      "status": "completed",
      "output": {
        "updated_file": "index.html"
      },
      "error": null,
      "cost": 0.0,
      "start_time": "2025-07-17T09:15:41.381713",
      "end_time": "2025-07-17T09:15:50.850638",
      "execution_time": 9.468925,
      "input_tokens": 0,
      "output_tokens": 0,
      "execution_result": null
    },
    {
      "id": "T005",
      "description": "Create JavaScript code for a 2D collision animation with different masses and angles. Use canvas or SVG for the animation. Include controls to vary mass, velocity, and angle. The animation should be self-explanatory and scientifically accurate. The javascript must be embedded within the HTML file using <script> tags.",
      "agent": "CoderAgent",
      "agent_prompt": "Create JavaScript code for a 2D collision animation with different masses and angles. Use canvas for the animation. Include controls to vary mass (m1, m2), velocity (v1, v2), and angle (angle1, angle2) of two objects. The animation should demonstrate the conservation of momentum. Use requestAnimationFrame for smooth animation. The javascript must be embedded within the HTML file using <script> tags. Read the content of the index.html file from the output of T004. If <script> tag already exists in that file, then add the javascript code within the <script> tags. If not, create it at the end of the body tag of index.html. Add JavaScript code to create a canvas element with id 'collision2DCanvas'. The canvas element must have width of 600 and height of 400 pixels. Add Javascript code to create four sliders for each mass (m1, m2), velocity (v1, v2) and angle(angle1, angle2). The ranges of the slider must be m1 (1 to 10), m2 (1 to 10), v1 (-10 to 10), v2 (-10 to 10), angle1(0 to 360) and angle2(0 to 360). All content must be added before the '<!--2D_COLLISION_PLACEHOLDER-->' placeholder in the index.html file. Use the placeholder '<!--2D_COLLISION_JS_PLACEHOLDER-->' in the <script> tag. All javascript code must be added before the '<!--2D_COLLISION_JS_PLACEHOLDER-->'.",
      "reads": [
        "T004"
      ],
      "writes": [
        "T005"
      ],
      "status": "completed",
      "output": {
        "updated_file": "index.html"
      },
      "error": null,
      "cost": 0.0,
      "start_time": "2025-07-17T09:15:50.879709",
      "end_time": "2025-07-17T09:16:03.770447",
      "execution_time": 12.890738,
      "input_tokens": 0,
      "output_tokens": 0,
      "execution_result": null
    },
    {
      "id": "T006",
      "description": "Create JavaScript code for a Newton's Cradle animation. Use canvas or SVG for the animation. The animation should be self-explanatory and visually appealing. The javascript must be embedded within the HTML file using <script> tags.",
      "agent": "CoderAgent",
      "agent_prompt": "Create JavaScript code for a Newton's Cradle animation. Use canvas for the animation. The animation should be self-explanatory and visually appealing. Use requestAnimationFrame for smooth animation. The javascript must be embedded within the HTML file using <script> tags. Read the content of the index.html file from the output of T005. If <script> tag already exists in that file, then add the javascript code within the <script> tags. If not, create it at the end of the body tag of index.html. Add JavaScript code to create a canvas element with id 'newtonsCradleCanvas'. The canvas element must have width of 600 and height of 400 pixels. All content must be added before the '<!--NEWTONS_CRADLE_PLACEHOLDER-->' placeholder in the index.html file. Use the placeholder '<!--NEWTONS_CRADLE_JS_PLACEHOLDER-->' in the <script> tag. All javascript code must be added before the '<!--NEWTONS_CRADLE_JS_PLACEHOLDER-->'.",
      "reads": [
        "T005"
      ],
      "writes": [
        "T006"
      ],
      "status": "completed",
      "output": {
        "updated_file": "index.html"
      },
      "error": null,
      "cost": 0.0,
      "start_time": "2025-07-17T09:16:03.799454",
      "end_time": "2025-07-17T09:16:14.580319",
      "execution_time": 10.780865,
      "input_tokens": 0,
      "output_tokens": 0,
      "execution_result": null
    },
    {
      "id": "T007",
      "description": "Create JavaScript code for a bouncing balls animation with changing mass. Use canvas or SVG for the animation. Include controls to vary initial height and mass. The animation should be self-explanatory and scientifically accurate. The javascript must be embedded within the HTML file using <script> tags.",
      "agent": "CoderAgent",
      "agent_prompt": "Create JavaScript code for a bouncing balls animation with changing mass. Use canvas for the animation. Include controls to vary initial height and mass of the balls. The animation should be self-explanatory and scientifically accurate. Use requestAnimationFrame for smooth animation. The javascript must be embedded within the HTML file using <script> tags. Read the content of the index.html file from the output of T006. If <script> tag already exists in that file, then add the javascript code within the <script> tags. If not, create it at the end of the body tag of index.html. Add JavaScript code to create a canvas element with id 'bouncingBallsCanvas'. The canvas element must have width of 600 and height of 400 pixels. Add Javascript code to create two sliders for initial height and mass. The ranges of the slider must be height (1 to 400), mass (1 to 10). All content must be added before the '<!--BOUNCING_BALLS_PLACEHOLDER-->' placeholder in the index.html file. Use the placeholder '<!--BOUNCING_BALLS_JS_PLACEHOLDER-->' in the <script> tag. All javascript code must be added before the '<!--BOUNCING_BALLS_JS_PLACEHOLDER-->'.",
      "reads": [
        "T006"
      ],
      "writes": [
        "T007"
      ],
      "status": "completed",
      "output": {
        "updated_file": "index.html"
      },
      "error": null,
      "cost": 0.0,
      "start_time": "2025-07-17T09:16:14.606305",
      "end_time": "2025-07-17T09:16:25.066149",
      "execution_time": 10.459844,
      "input_tokens": 0,
      "output_tokens": 0,
      "execution_result": null
    },
    {
      "id": "T008",
      "description": "Create JavaScript code for a carts on a frictionless track with spring bumpers animation. Use canvas or SVG for the animation. Include controls to vary mass and initial velocity. The animation should be self-explanatory and scientifically accurate. The javascript must be embedded within the HTML file using <script> tags.",
      "agent": "CoderAgent",
      "agent_prompt": "Create JavaScript code for a carts on a frictionless track with spring bumpers animation. Use canvas for the animation. Include controls to vary mass (m1, m2) and initial velocity (v1, v2) of the carts. The animation should be self-explanatory and scientifically accurate. Use requestAnimationFrame for smooth animation. The javascript must be embedded within the HTML file using <script> tags. Read the content of the index.html file from the output of T007. If <script> tag already exists in that file, then add the javascript code within the <script> tags. If not, create it at the end of the body tag of index.html. Add JavaScript code to create a canvas element with id 'cartsCanvas'. The canvas element must have width of 600 and height of 400 pixels. Add Javascript code to create two sliders for each mass (m1, m2) and velocity (v1, v2). The ranges of the slider must be m1 (1 to 10), m2 (1 to 10), v1 (-10 to 10), v2 (-10 to 10). All content must be added before the '<!--CARTS_PLACEHOLDER-->' placeholder in the index.html file. Use the placeholder '<!--CARTS_JS_PLACEHOLDER-->' in the <script> tag. All javascript code must be added before the '<!--CARTS_JS_PLACEHOLDER-->'.",
      "reads": [
        "T007"
      ],
      "writes": [
        "T008"
      ],
      "status": "failed",
      "output": null,
      "error": "Code execution failed: Code execution failed: All code variants failed. Errors: CODE_1: SyntaxError: unterminated string literal (detected at line 113) (<unknown>, line 113)",
      "cost": 0.0,
      "start_time": "2025-07-17T09:16:25.095157",
      "end_time": "2025-07-17T09:16:35.734878",
      "execution_time": 10.639721
    },
    {
      "id": "T009",
      "description": "Integrate the animations into the HTML structure and add navigation. Add navigation buttons to move between slides. Ensure all assets are properly linked and the presentation works offline. The navigation must be embedded within the HTML file using <script> tags.",
      "agent": "CoderAgent",
      "agent_prompt": "Integrate the animations into the HTML structure and add navigation. Add navigation buttons to move between slides (e.g., 'Next', 'Previous'). Ensure all assets are properly linked and the presentation works offline. Each animation (elastic collision, inelastic collision, 2D collision, Newton's cradle, bouncing balls, carts) should be on a separate 'slide' (e.g., a <div> with a unique ID). The navigation buttons should toggle the visibility of these slides. Ensure that only title slide is visible when the page loads. All content must be added before the '<!--NAVIGATION_PLACEHOLDER-->' placeholder in the index.html file. The navigation must be embedded within the HTML file using <script> tags. Read the content of the index.html file from the output of T008. Use the placeholder '<!--NAVIGATION_JS_PLACEHOLDER-->' in the <script> tag. All javascript code must be added before the '<!--NAVIGATION_JS_PLACEHOLDER-->'.",
      "reads": [
        "T008"
      ],
      "writes": [
        "T009"
      ],
      "status": "pending",
      "output": null,
      "error": null,
      "cost": 0.0,
      "start_time": null,
      "end_time": null,
      "execution_time": 0.0
    },
    {
      "id": "T010",
      "description": "Create a summary slide reinforcing the conservation principle. Include a brief explanation and a visual representation (e.g., a diagram). The summary slide must be added to the index.html",
      "agent": "CoderAgent",
      "agent_prompt": "Create a summary slide reinforcing the conservation principle. Include a brief explanation and a visual representation (e.g., a diagram) summarizing the law of conservation of momentum. The summary slide must be added to the index.html file within the '<!--SUMMARY_SLIDE_PLACEHOLDER-->' placeholder. Read the content of the index.html file from the output of T009. Add HTML to the index.html file within the placeholder. The summary slide should include heading 'Summary' and subheading 'Law of Conservation of Momentum'.",
      "reads": [
        "T009"
      ],
      "writes": [
        "T010"
      ],
      "status": "pending",
      "output": null,
      "error": null,
      "cost": 0.0,
      "start_time": null,
      "end_time": null,
      "execution_time": 0.0
    },
    {
      "id": "T011",
      "description": "Final cleanup/QA pass to ensure everything works correctly. Check for missing links, broken animations, and layout issues. This step will be done by QA Agent",
      "agent": "QAAgent",
      "agent_prompt": "Perform a final cleanup/QA pass on the presentation to ensure everything works correctly. Check for missing links, broken animations, layout issues, and scientific accuracy. Ensure all animations run smoothly and the navigation works as expected. The output from T010 is the final presentation content. Provide a report that mentions if any features are broken or can be improved upon.",
      "reads": [
        "T010"
      ],
      "writes": [
        "T011"
      ],
      "status": "pending",
      "output": null,
      "error": null,
      "cost": 0.0,
      "start_time": null,
      "end_time": null,
      "execution_time": 0.0
    },
    {
      "id": "T012",
      "description": "Distill the final HTML presentation.",
      "agent": "DistillerAgent",
      "agent_prompt": "Distill the final HTML presentation (index.html) from the output of T010 into a concise summary, highlighting the key components, animations, and overall structure.",
      "reads": [
        "T010"
      ],
      "writes": [
        "T012"
      ],
      "status": "pending",
      "output": null,
      "error": null,
      "cost": 0.0,
      "start_time": null,
      "end_time": null,
      "execution_time": 0.0
    }
  ],
  "links": [
    {
      "source": "ROOT",
      "target": "T001"
    },
    {
      "source": "T001",
      "target": "T002"
    },
    {
      "source": "T002",
      "target": "T003"
    },
    {
      "source": "T003",
      "target": "T004"
    },
    {
      "source": "T004",
      "target": "T005"
    },
    {
      "source": "T005",
      "target": "T006"
    },
    {
      "source": "T006",
      "target": "T007"
    },
    {
      "source": "T007",
      "target": "T008"
    },
    {
      "source": "T008",
      "target": "T009"
    },
    {
      "source": "T009",
      "target": "T010"
    },
    {
      "source": "T010",
      "target": "T011"
    },
    {
      "source": "T010",
      "target": "T012"
    }
  ]
}